{'val_range': array([[2166.66666667,    0.        ],
       [1666.66666667,    0.        ],
       [1166.66666667,    0.        ],
       [2250.        ,    0.        ],
       [1083.33333333,    0.        ],
       [2333.33333333,    0.        ],
       [1833.33333333,    0.        ],
       [1500.        ,    0.        ],
       [ 916.66666667,    0.        ],
       [1416.66666667,    0.        ],
       [2416.66666667,    0.        ],
       [1333.33333333,    0.        ],
       [2500.        ,    0.        ],
       [2000.        ,    0.        ],
       [2083.33333333,    0.        ],
       [1750.        ,    0.        ],
       [ 750.        ,    0.        ],
       [ 666.66666667,    0.        ],
       [1916.66666667,    0.        ],
       [1250.        ,    0.        ],
       [ 500.        ,    0.        ],
       [1583.33333333,    0.        ],
       [ 833.33333333,    0.        ],
       [ 583.33333333,    0.        ],
       [1000.        ,    0.        ]]), 'H_fname': 'matrices/H3.npy', 'fixed_params': {'ACw': 10000000.0, 'DCi': 500, 'DCslope': 275000000.0, 'deltaT': 1}, 'time_params': {'pts_per_Vcm': 0.01, 'num_segm': 'int(3*p.DCi/p.DCslope*p.ACw/(2*np.pi)/2)', 't_final': '2 * p.DCi / p.DCslope', 'segm_pts': 'p.DCslope + p.ACw*np.heaviside(p.DCi/p.DCslope+p.deltaT - segm[i],1)', 's': 15, 'batch_size': 3}, 'state_idx': 35, 'scan_param': 'ACi', 'field_str': ['0*t', '0*t', 'p.DCi - p.DCslope*t + p.ACi * np.heaviside( p.DCi/p.DCslope+p.deltaT - t, 1) * np.cos(p.ACw*t)', '0*t', '0*t', '0*t + 0.5'], 'scan_param2': 'none', 'batch_size': 16384, 'kwargs': {}, 'H_fn': <function load_Hamiltonian.<locals>.<lambda> at 0x7f6cd033c550>, 'exit_probs': [], 'val1': 2166.6666666666665, 'val2': 0.0, 'ppp': <__main__.Params object at 0x7f6cd030b640>, 't_batches': [array([0.00000000e+00, 6.06060606e-07, 1.21212121e-06]), array([1.21212121e-06, 1.81818182e-06, 2.42424242e-06]), array([2.42424242e-06, 3.03030303e-06])], 'dt_batches': [array([6.06060606e-07, 6.06060606e-07, 0.00000000e+00]), array([6.06060606e-07, 6.06060606e-07, 0.00000000e+00]), array([6.06060606e-07, 6.06060606e-07])], 'U': array([[1., 0., 0., ..., 0., 0., 0.],
       [0., 1., 0., ..., 0., 0., 0.],
       [0., 0., 1., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 1., 0., 0.],
       [0., 0., 0., ..., 0., 1., 0.],
       [0., 0., 0., ..., 0., 0., 1.]]), 't': array([0.00000000e+00, 6.06060606e-07, 1.21212121e-06]), 'dt': array([6.06060606e-07, 6.06060606e-07, 0.00000000e+00])}
